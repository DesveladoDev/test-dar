{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" List Products\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Title\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Price\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Category\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.loading ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: product.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(product.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.category), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" cargando... \"))]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;gCAElBC,oBAAuB,YAAnB,gBAAc;;EACbD,KAAK,EAAC;AAAO;gCAClBC,oBAOQ,6BANNA,oBAKK,0BAJHA,oBAAsB;EAAlBC,KAAK,EAAC;AAAK,GAAC,GAAC,gBACjBD,oBAA0B;EAAtBC,KAAK,EAAC;AAAK,GAAC,OAAK,gBACrBD,oBAA0B;EAAtBC,KAAK,EAAC;AAAK,GAAC,OAAK,gBACrBD,oBAA6B;EAAzBC,KAAK,EAAC;AAAK,GAAC,UAAQ;;;;;uBAThCC,oBAyBM,OAzBNC,UAyBM,IAxBaC,aAAO,kBAAxBF,oBAoBWG;IAAAC;EAAA,IAnBTC,UAAuB,EACzBP,oBAiBQ,SAjBRQ,UAiBQ,GAhBNC,UAOQ,EACRT,oBAOQ,mCANNE,oBAKKG,6BALiBD,cAAQ,EAAnBM,OAAO;yBAAlBR,oBAKK;MAL4BI,GAAG,EAAEI,OAAO,CAACC;QAC5CX,oBAAyB,6BAAlBU,OAAO,CAACC,EAAE,kBACjBX,oBAA6B,6BAArBU,OAAO,CAACE,KAAK,kBACrBZ,oBAA4B,6BAArBU,OAAO,CAACG,KAAK,kBACpBb,oBAA+B,6BAAxBU,OAAO,CAACI,QAAQ;mFAK7BZ,oBAEM,mBAFM,eAEZ","names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_1","$data","_Fragment","key","_hoisted_2","_hoisted_3","_hoisted_4","product","id","title","price","category"],"sourceRoot":"","sources":["/home/avcitoria/Desktop/hello-word/src/components/ListProducts.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <template v-if=\"!loading\">\n      <h1> List Products</h1>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"product in products\" :key=\"product.id\">\n          <td>{{ product.id }}</td>\n          <td> {{ product.title }}</td>\n          <td>{{ product.price }}</td>\n          <td>{{ product.category }}</td>\n        </tr>\n      </tbody>\n    </table>\n    </template>\n    <div v-else>\n        cargando...\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\n\nexport default {\n  name: 'ListProducts',\n  props: {\n    msg: String\n  },\n  data() {\n      return {\n         products: {},\n         loading: false\n      }\n  },\n  async created() {\n    this.loading = true;\n    try {\n      const productsAPi = await axios.get('https://fakestoreapi.com/products'); \n      let  dataProduct = productsAPi.data;\n      this.products = dataProduct.map(function(element){\n         return {\n            id: element.id,\n            title: element.title,\n            price: element.price,\n            category: element.category\n         }\n    }).sort((a,b) => b.category - a.category);\n    } catch(error) {\n      this.loading = false;\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}